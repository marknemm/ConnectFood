name: CI/CD
on: [push]
env:
  CONFIGURATION: ${{ github.ref == 'refs/heads/release' && 'production' || 'qa' }}
jobs:

  build_client_admin:
    name: Build Client - Admin
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [14.x]
    steps:
      - uses: actions/checkout@v2
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v2
        with:
          node-version: ${{ matrix.node-version }}
      - name: Cache Node Modules
        uses: actions/cache@v2
        env:
          CACHE_NAME: npm-client
        with:
          path: ~/.npm # npm cache files are stored in `~/.npm` on Linux/macOS
          key: ${{ runner.os }}-${{ env.CACHE_NAME }}-${{ secrets.CACHE_VERSION }}-${{ hashFiles('./client/package-lock.json') }}
          restore-keys: ${{ runner.os }}-${{ env.CACHE_NAME }}-${{ secrets.CACHE_VERSION }}
      - name: Cache Build
        id: cache-build
        uses: actions/cache@v2
        with:
          key: ${{ runner.os }}-${{ env.CONFIGURATION }}-build-client-admin-${{ secrets.CACHE_VERSION }}-${{ hashFiles('./client/angular.json', './client/**/tsconfig*', './client/package-lock.json', './client/projects/admin/**/*', './client/projects/web/**/*', './shared/**/*') }}
          path: ./client/dist
      - name: Install Node Modules
        if: steps.cache-build.outputs.cache-hit != 'true'
        run: cd ./client && npm install
      - name: Build Source Code
        if: steps.cache-build.outputs.cache-hit != 'true'
        run: cd ./client && npm run build admin -- --configuration=${{ env.CONFIGURATION }}
      - name: Lint Source Code
        if: steps.cache-build.outputs.cache-hit != 'true'
        run: cd ./client && npm run lint admin

  build_client_hybrid:
    name: Build Client - Hybrid
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [14.x]
    steps:
      - uses: actions/checkout@v2
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v2
        with:
          node-version: ${{ matrix.node-version }}
      - name: Cache Node Modules
        uses: actions/cache@v2
        env:
          CACHE_NAME: npm-client
        with:
          path: ~/.npm # npm cache files are stored in `~/.npm` on Linux/macOS
          key: ${{ runner.os }}-${{ env.CACHE_NAME }}-${{ secrets.CACHE_VERSION }}-${{ hashFiles('./client/package-lock.json') }}
          restore-keys: ${{ runner.os }}-${{ env.CACHE_NAME }}-${{ secrets.CACHE_VERSION }}
      - name: Cache Build
        id: cache-build
        uses: actions/cache@v2
        with:
          key: ${{ runner.os }}-${{ env.CONFIGURATION }}-build-client-hybrid-${{ secrets.CACHE_VERSION }}-${{ hashFiles('./client/angular.json', './client/**/tsconfig*', './client/package-lock.json', './client/projects/hybrid/**/*', './client/projects/web/**/*', './shared/**/*') }}
          path: ./client/dist
      - name: Install Node Modules
        if: steps.cache-build.outputs.cache-hit != 'true'
        run: cd ./client && npm install
      - name: Build Source Code
        if: steps.cache-build.outputs.cache-hit != 'true'
        run: cd ./client && npm run build hybrid:all -- --configuration=${{ env.CONFIGURATION }}
      - name: Lint Source Code
        if: steps.cache-build.outputs.cache-hit != 'true'
        run: cd ./client && npm run lint hybrid

  build_client_web:
    name: Build Client - Web
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [14.x]
    steps:
      - uses: actions/checkout@v2
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v2
        with:
          node-version: ${{ matrix.node-version }}
      - name: Cache Node Modules
        uses: actions/cache@v2
        env:
          CACHE_NAME: npm-client
        with:
          path: ~/.npm # npm cache files are stored in `~/.npm` on Linux/macOS
          key: ${{ runner.os }}-${{ env.CACHE_NAME }}-${{ secrets.CACHE_VERSION }}-${{ hashFiles('./client/package-lock.json') }}
          restore-keys: ${{ runner.os }}-${{ env.CACHE_NAME }}-${{ secrets.CACHE_VERSION }}
      - name: Cache Build
        id: cache-build
        uses: actions/cache@v2
        with:
          key: ${{ runner.os }}-${{ env.CONFIGURATION }}-build-client-web-${{ secrets.CACHE_VERSION }}-${{ hashFiles('./client/angular.json', './client/**/tsconfig*', './client/package-lock.json', './client/projects/web/**/*', './shared/**/*') }}
          path: ./client/dist
      - name: Install Node Modules
        if: steps.cache-build.outputs.cache-hit != 'true'
        run: cd ./client && npm install
      - name: Build Source Code
        if: steps.cache-build.outputs.cache-hit != 'true'
        run: cd ./client && npm run build web -- --configuration=${{ env.CONFIGURATION }}
      - name: Lint Source Code
        if: steps.cache-build.outputs.cache-hit != 'true'
        run: cd ./client && npm run lint web

  build_server_admin:
    name: Build Server - Admin
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [14.x]
    steps:
      - uses: actions/checkout@v2
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v2
        with:
          node-version: ${{ matrix.node-version }}
      - name: Cache Node Modules
        uses: actions/cache@v2
        env:
          CACHE_NAME: npm-server
        with:
          path: ~/.npm # npm cache files are stored in `~/.npm` on Linux/macOS
          key: ${{ runner.os }}-${{ env.CACHE_NAME }}-${{ secrets.CACHE_VERSION }}-${{ hashFiles('./server/package-lock.json') }}
          restore-keys: ${{ runner.os }}-${{ env.CACHE_NAME }}-${{ secrets.CACHE_VERSION }}
      - name: Cache Build
        id: cache-build
        uses: actions/cache@v2
        with:
          key: ${{ runner.os }}-build-server-admin-${{ secrets.CACHE_VERSION }}-${{ hashFiles('./server/**/tsconfig*', './server/package-lock.json', './server/projects/**/*', './shared/**/*') }}
          path: ./server/dist
      - name: Install Node Modules
        if: steps.cache-build.outputs.cache-hit != 'true'
        run: cd ./server && npm install
      - name: Build Source Code
        if: steps.cache-build.outputs.cache-hit != 'true'
        run: cd ./server && npm run build admin
      - name: Lint Source Code
        if: steps.cache-build.outputs.cache-hit != 'true'
        run: cd ./server && npm run lint admin

  build_server_web:
    name: Build Server - Web
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [14.x]
    steps:
      - uses: actions/checkout@v2
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v2
        with:
          node-version: ${{ matrix.node-version }}
      - name: Cache Node Modules
        uses: actions/cache@v2
        env:
          CACHE_NAME: npm-server
        with:
          path: ~/.npm # npm cache files are stored in `~/.npm` on Linux/macOS
          key: ${{ runner.os }}-${{ env.CACHE_NAME }}-${{ secrets.CACHE_VERSION }}-${{ hashFiles('./server/package-lock.json') }}
          restore-keys: ${{ runner.os }}-${{ env.CACHE_NAME }}-${{ secrets.CACHE_VERSION }}
      - name: Cache Build
        id: cache-build
        uses: actions/cache@v2
        with:
          key: ${{ runner.os }}-build-server-web-${{ secrets.CACHE_VERSION }}-${{ hashFiles('./server/**/tsconfig*', './server/package-lock.json', './server/projects/web/**/*', './shared/**/*') }}
          path: ./server/dist
      - name: Install Node Modules
        if: steps.cache-build.outputs.cache-hit != 'true'
        run: cd ./server && npm install
      - name: Build Source Code
        if: steps.cache-build.outputs.cache-hit != 'true'
        run: cd ./server && npm run build web
      - name: Lint Source Code
        if: steps.cache-build.outputs.cache-hit != 'true'
        run: cd ./server && npm run lint web

  build_shared:
    name: Build Shared
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [14.x]
    steps:
      - uses: actions/checkout@v2
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v2
        with:
          node-version: ${{ matrix.node-version }}
      - name: Cache Node Modules
        uses: actions/cache@v2
        env:
          CACHE_NAME: npm-shared
        with:
          path: ~/.npm # npm cache files are stored in `~/.npm` on Linux/macOS
          key: ${{ runner.os }}-${{ env.CACHE_NAME }}-${{ secrets.CACHE_VERSION }}-${{ hashFiles('./shared/package-lock.json') }}
          restore-keys: ${{ runner.os }}-${{ env.CACHE_NAME }}-${{ secrets.CACHE_VERSION }}
      - name: Cache Build
        id: cache-build
        uses: actions/cache@v2
        with:
          key: ${{ runner.os }}-build-shared-${{ secrets.CACHE_VERSION }}-${{ hashFiles('./shared/**/*') }}
          path: ./shared/dist
      - name: Install Node Modules
        if: steps.cache-build.outputs.cache-hit != 'true'
        run: cd ./shared && npm install
      - name: Build Source Code
        if: steps.cache-build.outputs.cache-hit != 'true'
        run: cd ./shared && npm run build
      - name: Lint Source Code
        if: steps.cache-build.outputs.cache-hit != 'true'
        run: cd ./shared && npm run lint
