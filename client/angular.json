{
  "version": 1,
  "cli": {
    "analytics": false,
    "defaultCollection": "@nrwl/angular"
  },
  "defaultProject": "web",
  "projects": {
    "web": {
      "projectType": "application",
      "schematics": {
        "@schematics/angular:component": {
          "prefix": "foodweb",
          "style": "scss"
        },
        "@schematics/angular:directive": {
          "prefix": "foodweb"
        }
      },
      "root": ".",
      "sourceRoot": "projects/web/src",
      "prefix": "foodweb",
      "architect": {
        "build": {
          "builder": "@angular-devkit/build-angular:browser",
          "options": {
            "outputPath": "dist/web",
            "index": "projects/web/src/index.html",
            "main": "projects/web/src/main.ts",
            "polyfills": "projects/web/src/polyfills.ts",
            "tsConfig": "projects/web/tsconfig.json",
            "allowedCommonJsDependencies": [
              "event-source-polyfill",
              "google-polyline",
              "lscache"
            ],
            "assets": [
              {
                "glob": "**/*",
                "input": "./assets",
                "output": "./assets"
              },
              "projects/web/src/assets"
            ],
            "styles": [
              "projects/web/src/styles/styles.scss",
              "projects/admin/src/styles/admin-styles.scss",
              "./node_modules/material-icons-font/material-icons-font.css",
              "./node_modules/quill/dist/quill.core.css",
              "./node_modules/quill/dist/quill.bubble.css",
              "./node_modules/quill/dist/quill.snow.css"
            ],
            "stylePreprocessorOptions": {
              "includePaths": ["projects/web/src/styles"]
            },
            "scripts": []
          },
          "configurations": {
            "demo": {
              "optimization": true,
              "outputHashing": "all",
              "sourceMap": false,
              "namedChunks": false,
              "aot": true,
              "extractLicenses": true,
              "vendorChunk": false,
              "buildOptimizer": true,
              "fileReplacements": [
                {
                  "replace": "projects/web/src/environments/environment.ts",
                  "with": "projects/web/src/environments/environment.demo.ts"
                }
              ]
            },
            "es5": {
              "tsConfig": "tsconfig.es5.json"
            },
            "hmr": {
              "fileReplacements": [
                {
                  "replace": "projects/web/src/environments/environment.ts",
                  "with": "projects/web/src/environments/environment.hmr.ts"
                }
              ]
            },
            "offline": {
              "fileReplacements": [
                {
                  "replace": "projects/web/src/environments/environment.ts",
                  "with": "projects/web/src/environments/environment.offline.ts"
                }
              ]
            },
            "production": {
              "optimization": true,
              "outputHashing": "all",
              "sourceMap": false,
              "namedChunks": false,
              "aot": true,
              "extractLicenses": true,
              "vendorChunk": false,
              "buildOptimizer": true,
              "fileReplacements": [
                {
                  "replace": "projects/web/src/environments/environment.ts",
                  "with": "projects/web/src/environments/environment.prod.ts"
                }
              ]
            },
            "qa": {
              "optimization": true,
              "outputHashing": "all",
              "sourceMap": false,
              "namedChunks": false,
              "aot": true,
              "extractLicenses": true,
              "vendorChunk": false,
              "buildOptimizer": true,
              "fileReplacements": [
                {
                  "replace": "projects/web/src/environments/environment.ts",
                  "with": "projects/web/src/environments/environment.qa.ts"
                }
              ]
            }
          }
        },
        "serve": {
          "builder": "@angular-devkit/build-angular:dev-server",
          "options": {
            "browserTarget": "web:build",
            "sourceMap": true
          },
          "configurations": {
            "es5": {
              "browserTarget": "web:build:es5"
            },
            "hmr": {
              "hmr": true,
              "hmrWarning": false,
              "browserTarget": "web:build:hmr"
            },
            "production": {
              "browserTarget": "web:build:production"
            },
            "qa": {
              "browserTarget": "web:build:qa"
            },
            "offline": {
              "browserTarget": "web:build:offline"
            }
          }
        },
        "extract-i18n": {
          "builder": "@angular-devkit/build-angular:extract-i18n",
          "options": {
            "browserTarget": "web:build"
          }
        },
        "test": {
          "builder": "@angular-devkit/build-angular:karma",
          "options": {
            "main": "src/test.ts",
            "polyfills": "src/polyfills.ts",
            "tsConfig": "projects/web/tsconfig.spec.json",
            "karmaConfig": "projects/web/karma.conf.js",
            "assets": ["src/favicon.ico", "src/assets"],
            "styles": ["projects/web/src/styles/styles.scss"],
            "stylePreprocessorOptions": {
              "includePaths": ["projects/web/src/styles"]
            },
            "scripts": []
          }
        },
        "lint": {
          "builder": "@angular-devkit/build-angular:tslint",
          "options": {
            "tsConfig": [
              "projects/web/tsconfig.json",
              "projects/web/tsconfig.spec.json"
            ],
            "exclude": ["**/node_modules/**"]
          }
        },
        "e2e": {
          "builder": "@angular-devkit/build-angular:protractor",
          "options": {
            "protractorConfig": "e2e/protractor.conf.js",
            "devServerTarget": "web:serve"
          },
          "configurations": {
            "production": {
              "devServerTarget": "web:serve:production"
            }
          }
        }
      }
    },
    "admin": {
      "projectType": "application",
      "root": ".",
      "sourceRoot": "projects/admin/src",
      "prefix": "admin",
      "architect": {
        "build": {
          "builder": "@angular-devkit/build-angular:browser",
          "options": {
            "outputPath": "dist/admin",
            "index": "projects/admin/src/index.html",
            "main": "projects/admin/src/main.ts",
            "polyfills": "projects/admin/src/polyfills.ts",
            "tsConfig": "projects/admin/tsconfig.json",
            "aot": true,
            "allowedCommonJsDependencies": [
              "event-source-polyfill",
              "google-polyline",
              "lscache"
            ],
            "assets": [
              {
                "glob": "**/*",
                "input": "./assets",
                "output": "./assets"
              },
              "projects/admin/src/assets"
            ],
            "styles": [
              "projects/web/src/styles/styles.scss",
              "projects/admin/src/styles/admin-styles.scss",
              "./node_modules/material-icons-font/material-icons-font.css",
              "./node_modules/quill/dist/quill.core.css",
              "./node_modules/quill/dist/quill.bubble.css",
              "./node_modules/quill/dist/quill.snow.css"
            ],
            "stylePreprocessorOptions": {
              "includePaths": [
                "projects/web/src/styles",
                "projects/admin/src/styles"
              ]
            },
            "fileReplacements": [
              {
                "replace": "projects/web/src/environments/environment.ts",
                "with": "projects/admin/src/environments/environment.ts"
              }
            ],
            "scripts": []
          },
          "configurations": {
            "production": {
              "fileReplacements": [
                {
                  "replace": "projects/admin/src/environments/environment.ts",
                  "with": "projects/admin/src/environments/environment.prod.ts"
                }
              ],
              "optimization": true,
              "outputHashing": "all",
              "sourceMap": false,
              "namedChunks": false,
              "extractLicenses": true,
              "vendorChunk": false,
              "buildOptimizer": true,
              "budgets": [
                {
                  "type": "initial",
                  "maximumWarning": "2mb",
                  "maximumError": "5mb"
                },
                {
                  "type": "anyComponentStyle",
                  "maximumWarning": "6kb",
                  "maximumError": "10kb"
                }
              ]
            }
          }
        },
        "serve": {
          "builder": "@angular-devkit/build-angular:dev-server",
          "options": {
            "browserTarget": "admin:build"
          },
          "configurations": {
            "production": {
              "browserTarget": "admin:build:production"
            }
          }
        },
        "extract-i18n": {
          "builder": "@angular-devkit/build-angular:extract-i18n",
          "options": {
            "browserTarget": "admin:build"
          }
        },
        "lint": {
          "builder": "@nrwl/linter:eslint",
          "options": {
            "lintFilePatterns": [
              "projects/admin/src/**/*.ts",
              "projects/admin/src/**/*.html"
            ]
          }
        },
        "test": {
          "builder": "@angular-devkit/build-angular:karma",
          "options": {
            "main": "src/test.ts",
            "polyfills": "src/polyfills.ts",
            "tsConfig": "projects/admin/tsconfig.spec.json",
            "karmaConfig": "projects/admin/karma.conf.js",
            "assets": ["src/favicon.ico", "src/assets"],
            "styles": [
              "projects/web/src/styles/styles.scss",
              "projects/admin/src/styles/admin-styles.scss",
              "./node_modules/material-design-icons/iconfont/material-icons.css",
              "./node_modules/quill/dist/quill.core.css",
              "./node_modules/quill/dist/quill.bubble.css",
              "./node_modules/quill/dist/quill.snow.css"
            ],
            "stylePreprocessorOptions": {
              "includePaths": [
                "projects/web/src/styles",
                "projects/admin/src/styles"
              ]
            },
            "scripts": []
          }
        }
      }
    },
    "ionic": {
      "projectType": "application",
      "root": ".",
      "sourceRoot": "projects/ionic/src",
      "prefix": "ionic",
      "architect": {
        "build": {
          "builder": "@angular-devkit/build-angular:browser",
          "options": {
            "outputPath": "dist/ionic",
            "index": "projects/ionic/src/index.html",
            "main": "projects/ionic/src/main.ts",
            "polyfills": "projects/ionic/src/polyfills.ts",
            "tsConfig": "projects/ionic/tsconfig.json",
            "aot": true,
            "assets": [
              "projects/ionic/src/assets",
              {
                "glob": "**/*.svg",
                "input": "node_modules/ionicons/dist/ionicons/svg",
                "output": "./svg"
              }
            ],
            "styles": [
              "projects/ionic/src/styles.scss",
              {
                "input": "projects\\ionic/src/theme/variables.scss"
              }
            ],
            "scripts": []
          },
          "configurations": {
            "production": {
              "fileReplacements": [
                {
                  "replace": "projects/ionic/src/environments/environment.ts",
                  "with": "projects/ionic/src/environments/environment.prod.ts"
                }
              ],
              "optimization": true,
              "outputHashing": "all",
              "sourceMap": false,
              "namedChunks": false,
              "extractLicenses": true,
              "vendorChunk": false,
              "buildOptimizer": true,
              "budgets": [
                {
                  "type": "initial",
                  "maximumWarning": "2mb",
                  "maximumError": "5mb"
                },
                {
                  "type": "anyComponentStyle",
                  "maximumWarning": "6kb",
                  "maximumError": "10kb"
                }
              ]
            }
          }
        },
        "serve": {
          "builder": "@angular-devkit/build-angular:dev-server",
          "options": {
            "browserTarget": "ionic:build"
          },
          "configurations": {
            "production": {
              "browserTarget": "ionic:build:production"
            }
          }
        },
        "extract-i18n": {
          "builder": "@angular-devkit/build-angular:extract-i18n",
          "options": {
            "browserTarget": "ionic:build"
          }
        },
        "lint": {
          "builder": "@nrwl/linter:eslint",
          "options": {
            "lintFilePatterns": [
              "projects/ionic/src/**/*.ts",
              "projects/ionic/src/**/*.html"
            ]
          }
        },
        "test": {
          "builder": "@nrwl/jest:jest",
          "outputs": ["coverage/projects/ionic"],
          "options": {
            "jestConfig": "projects/ionic/jest.config.js",
            "passWithNoTests": true
          }
        },
        "cap": {
          "builder": "@nxtend/capacitor:cap",
          "options": {
            "cmd": "--help"
          }
        },
        "add": {
          "builder": "@nxtend/capacitor:cap",
          "options": {
            "cmd": "add",
            "packageInstall": true
          },
          "configurations": {
            "ios": {
              "cmd": "add ios"
            },
            "android": {
              "cmd": "add android"
            }
          }
        },
        "copy": {
          "builder": "@nxtend/capacitor:cap",
          "options": {
            "cmd": "copy",
            "packageInstall": false
          },
          "configurations": {
            "ios": {
              "cmd": "copy ios"
            },
            "android": {
              "cmd": "copy android"
            }
          }
        },
        "open": {
          "builder": "@nxtend/capacitor:cap",
          "options": {
            "cmd": "open",
            "packageInstall": false
          },
          "configurations": {
            "ios": {
              "cmd": "open ios"
            },
            "android": {
              "cmd": "open android"
            }
          }
        },
        "sync": {
          "builder": "@nxtend/capacitor:cap",
          "options": {
            "cmd": "sync",
            "packageInstall": true
          },
          "configurations": {
            "ios": {
              "cmd": "sync ios"
            },
            "android": {
              "cmd": "sync android"
            }
          }
        },
        "update": {
          "builder": "@nxtend/capacitor:cap",
          "options": {
            "cmd": "update",
            "packageInstall": true
          },
          "configurations": {
            "ios": {
              "cmd": "update ios"
            },
            "android": {
              "cmd": "update android"
            }
          }
        }
      }
    }
  },
  "schematics": {
    "@nrwl/angular:application": {
      "style": "scss",
      "linter": "eslint",
      "unitTestRunner": "karma",
      "e2eTestRunner": "cypress"
    },
    "@nrwl/angular:library": {
      "style": "scss",
      "linter": "eslint",
      "unitTestRunner": "karma"
    },
    "@nrwl/angular:component": {
      "style": "scss"
    }
  }
}
